#include "gtest/gtest.h"  // access test macro
#include "MaxPointsOnALine.h"


TEST(Baisc, MyTest02){
    vector<Point> points{ { 1, 1 }, { 1, 1 }, { 1, 1 }, { 2, 2 } };

    Solution sol;
    ASSERT_EQ(sol.maxPoints(points), 4);
}



TEST(LeetCode, Fail04){
    vector<Point> points{ { 1, 1 }, { 1, 1 }, { 1, 1 } };

    Solution sol;
    ASSERT_EQ(sol.maxPoints(points), 3);


}

TEST(LeetCode, Fail03){
    vector<Point> points{ { 4, 0 }, { 4, -1 }, { 4, 5 } };

    Solution sol;
    ASSERT_EQ(sol.maxPoints(points), 3);


}

TEST(LeetCode, Timeoutt03){
    vector<Point> points{ { -240, -657 }, { -27, -188 }, { -616, -247 }, { -264, -311 }, { -352, -393 }, { -270, -748 }, { 3, 4 }, { -308, -87 }, { 150, 526 }, { 0, -13 }, { -7, -40 }, { -3, -10 }, { -531, -892 }, { -88, -147 }, { 4, -3 }, { -873, -555 }, { -582, -360 }, { -539, -207 }, { -118, -206 }, { 970, 680 }, { -231, -47 }, { 352, 263 }, { 510, 143 }, { 295, 480 }, { -590, -990 }, { -236, -402 }, { 308, 233 }, { -60, -111 }, { 462, 313 }, { -270, -748 }, { -352, -393 }, { -35, -148 }, { -7, -40 }, { 440, 345 }, { 388, 290 }, { 270, 890 }, { 10, -7 }, { 60, 253 }, { -531, -892 }, { 388, 290 }, { -388, -230 }, { 340, 85 }, { 0, -13 }, { 770, 473 }, { 0, 73 }, { 873, 615 }, { -42, -175 }, { -6, -8 }, { 49, 176 }, { 308, 222 }, { 170, 27 }, { -485, -295 }, { 170, 27 }, { 510, 143 }, { -18, -156 }, { -63, -316 }, { -28, -121 }, { 396, 304 }, { 472, 774 }, { -14, -67 }, { -5, 7 }, { -485, -295 }, { 118, 186 }, { -154, -7 }, { -7, -40 }, { -97, -35 }, { 4, -9 }, { -18, -156 }, { 0, -31 }, { -9, -124 }, { -300, -839 }, { -308, -352 }, { -425, -176 }, { -194, -100 }, { 873, 615 }, { 413, 676 }, { -90, -202 }, { 220, 140 }, { 77, 113 }, { -236, -402 }, { -9, -124 }, { 63, 230 }, { -255, -118 }, { 472, 774 }, { -56, -229 }, { 90, 228 }, { 3, -8 }, { 81, 196 }, { 970, 680 }, { 485, 355 }, { -354, -598 }, { -385, -127 }, { -2, 7 }, { 531, 872 }, { -680, -263 }, { -21, -94 }, { -118, -206 }, { 616, 393 }, { 291, 225 }, { -240, -657 }, { -5, -4 }, { 1, -2 }, { 485, 355 }, { 231, 193 }, { -88, -147 }, { -291, -165 }, { -176, -229 }, { 154, 153 }, { -970, -620 }, { -77, 33 }, { -60, -111 }, { 30, 162 }, { -18, -156 }, { 425, 114 }, { -177, -304 }, { -21, -94 }, { -10, 9 }, { -352, -393 }, { 154, 153 }, { -220, -270 }, { 44, -24 }, { -291, -165 }, { 0, -31 }, { 240, 799 }, { -5, -9 }, { -70, -283 }, { -176, -229 }, { 3, 8 }, { -679, -425 }, { -385, -127 }, { 396, 304 }, { -308, -352 }, { -595, -234 }, { 42, 149 }, { -220, -270 }, { 385, 273 }, { -308, -87 }, { -54, -284 }, { 680, 201 }, { -154, -7 }, { -440, -475 }, { -531, -892 }, { -42, -175 }, { 770, 473 }, { 118, 186 }, { -385, -127 }, { 154, 153 }, { 56, 203 }, { -616, -247 } };
    Solution sol;
    ASSERT_EQ(sol.maxPoints(points), 24);
}

TEST(Basic, MyTest01){
    vector<Point> points;
    Point temp;

    temp.x = 1;
    temp.y = 1;
    points.push_back(temp);

    temp.x = 0;
    temp.y = 0;
    points.push_back(temp);

    temp.x = 1;
    temp.y = -1;
    points.push_back(temp);

    temp.x = 2;
    temp.y = 2;
    points.push_back(temp);


    Solution sol;
    ASSERT_EQ(sol.maxPoints(points), 3);


}



TEST(LeetCode, Fail02){
    vector<Point> points{ { 2, 3 }, { 3, 3 }, { -5, 3 } };

    Solution sol;
    ASSERT_EQ(sol.maxPoints(points), 3);


}


TEST(LeetCode, Timeoutt02){
    vector<Point> points{ { 29, 87 }, { 145, 227 }, { 400, 84 }, { 800, 179 }, { 60, 950 }, { 560, 122 }, { -6, 5 }, { -87, -53 }, { -64, -118 }, { -204, -388 }, { 720, 160 }, { -232, -228 }, { -72, -135 }, { -102, -163 }, { -68, -88 }, { -116, -95 }, { -34, -13 }, { 170, 437 }, { 40, 103 }, { 0, -38 }, { -10, -7 }, { -36, -114 }, { 238, 587 }, { -340, -140 }, { -7, 2 }, { 36, 586 }, { 60, 950 }, { -42, -597 }, { -4, -6 }, { 0, 18 }, { 36, 586 }, { 18, 0 }, { -720, -182 }, { 240, 46 }, { 5, -6 }, { 261, 367 }, { -203, -193 }, { 240, 46 }, { 400, 84 }, { 72, 114 }, { 0, 62 }, { -42, -597 }, { -170, -76 }, { -174, -158 }, { 68, 212 }, { -480, -125 }, { 5, -6 }, { 0, -38 }, { 174, 262 }, { 34, 137 }, { -232, -187 }, { -232, -228 }, { 232, 332 }, { -64, -118 }, { -240, -68 }, { 272, 662 }, { -40, -67 }, { 203, 158 }, { -203, -164 }, { 272, 662 }, { 56, 137 }, { 4, -1 }, { -18, -233 }, { 240, 46 }, { -3, 2 }, { 640, 141 }, { -480, -125 }, { -29, 17 }, { -64, -118 }, { 800, 179 }, { -56, -101 }, { 36, 586 }, { -64, -118 }, { -87, -53 }, { -29, 17 }, { 320, 65 }, { 7, 5 }, { 40, 103 }, { 136, 362 }, { -320, -87 }, { -5, 5 }, { -340, -688 }, { -232, -228 }, { 9, 1 }, { -27, -95 }, { 7, -5 }, { 58, 122 }, { 48, 120 }, { 8, 35 }, { -272, -538 }, { 34, 137 }, { -800, -201 }, { -68, -88 }, { 29, 87 }, { 160, 27 }, { 72, 171 }, { 261, 367 }, { -56, -101 }, { -9, -2 }, { 0, 52 }, { -6, -7 }, { 170, 437 }, { -261, -210 }, { -48, -84 }, { -63, -171 }, { -24, -33 }, { -68, -88 }, { -204, -388 }, { 40, 103 }, { 34, 137 }, { -204, -388 }, { -400, -106 } };

    Solution sol;
    ASSERT_EQ(sol.maxPoints(points), 21);


}


TEST(LeetCode, Fail01){
    vector<Point> points;
    Point temp;


    temp.x = 0;
    temp.y = 0;
    points.push_back(temp);

    temp.x = -1;
    temp.y = -1;
    points.push_back(temp);

    temp.x = 2;
    temp.y = 2;
    points.push_back(temp);


    Solution sol;
    ASSERT_EQ(sol.maxPoints(points), 3);


}